castT (this allows for proper casting)
    make all altruct types implement castT
    add cast tests for all classes
    revisit casts in various altruct methods
    tests for gmp_helpers

Tests
    use compare macro to simplify comparison operator tests
    helper methods to anonymous namespace
    add to_modx helpers to test_util
    add tests for experimental classes and make them be proper.

PRNG
    make a templated wraper over rng that provides
        range [] both inc
        range [) inc exc
        range () both exc

Collections
    transform_indexed
    zip

I/O
    Pretty printers for ostream (partially done already)
    make simple_reader_stream actually implement istream ?
    make simple_writer_stream actually implement ostream ?

modulo class
    more efficient 64bit multiplication
        see implementation in libdivide
    see compiler intrinsics

libdivide
    https://libdivide.com/

double_int class?
    signed, unsigned
    do multiplication in a scalable way (karatsuba like)
    do division
    compare speed with gmp

Search
    ternary search & golden ratio?

Hashes
    sha1, md5

Geometry
    Voronoi, ...

Sparse matrix
    add tests
    move to altruct
    add element_wrapper

Trees
    splay tree
    link-cut tree: allows aggregation over paths
      changing root corresponds to rversing preferred path
      lazy reverse of left/right nodes in splay tree?

    dynamic euler tree: allows aggregation over subtrees
      https://youtu.be/L7ywsci9ujo?t=1966
      linearize tree by doing eluer tour (keep pointers to first and last visit)
      store linearized nodes in a balanced BST (e.g. splay tree)
      cutting subtree corresponds to
        splitting the linear segment (easy with splay tree)
        join before and after
      inserting subtree corresponds to joining three
        join before and new
        join new and after
      changing root corresponds to a cyclic rotation of all nodes
        split and join in reverse order
      be careful about off-by-one when cutting & joining

Graphs
    dominators - move impl to altruct
    hungarian algorithm
    min-cost max-flow

make LCA use RMQ structure?

discrete logarithm + tests
    pollard_rho_logarithm
    baby-step giant-step table
divisors2 (min, max) + tests
